{
  "contractName": "IACL",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "isProductOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "isAuthorized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isACL",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.23;\n\n/**\n* @title IACL\n* @dev Interface all ACL contracts must implement\n*/\ncontract IACL {\n\n  /**\n  * @dev Returns true if the provided address is registered as a product owner\n  * @param _sender Address to check for product owner authorization\n  */\n  function isProductOwner(address _sender) public view returns(bool);\n\n  /**\n  * @dev Returns true if the provided address is registered as an authorized account\n  * @param _sender Address to check for authorization\n  */\n  function isAuthorized(address _sender) public view returns(bool);\n\n  /**\n  * @dev Returns true for contracts that adhere to the ACL interface\n  * @return Boolean value identifying contract as implementing the ACL interface\n  */\n  function isACL() public pure returns(bool);\n\n}",
  "sourcePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/acl/IACL.sol",
  "ast": {
    "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/acl/IACL.sol",
    "exportedSymbols": {
      "IACL": [
        327
      ]
    },
    "id": 328,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 307,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title IACL\n@dev Interface all ACL contracts must implement",
        "fullyImplemented": false,
        "id": 327,
        "linearizedBaseContracts": [
          327
        ],
        "name": "IACL",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Returns true if the provided address is registered as a product owner\n@param _sender Address to check for product owner authorization",
            "id": 314,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isProductOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "298:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "297:17:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "335:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "334:6:2"
            },
            "scope": 327,
            "src": "274:67:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Returns true if the provided address is registered as an authorized account\n@param _sender Address to check for authorization",
            "id": 321,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isAuthorized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "517:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:17:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "554:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:6:2"
            },
            "scope": 327,
            "src": "495:65:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Returns true for contracts that adhere to the ACL interface\n@return Boolean value identifying contract as implementing the ACL interface",
            "id": 326,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isACL",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "762:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "761:6:2"
            },
            "scope": 327,
            "src": "725:43:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 328,
        "src": "97:674:2"
      }
    ],
    "src": "0:771:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/acl/IACL.sol",
    "exportedSymbols": {
      "IACL": [
        327
      ]
    },
    "id": 328,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 307,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title IACL\n@dev Interface all ACL contracts must implement",
        "fullyImplemented": false,
        "id": 327,
        "linearizedBaseContracts": [
          327
        ],
        "name": "IACL",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Returns true if the provided address is registered as a product owner\n@param _sender Address to check for product owner authorization",
            "id": 314,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isProductOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "298:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "297:17:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "335:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "334:6:2"
            },
            "scope": 327,
            "src": "274:67:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Returns true if the provided address is registered as an authorized account\n@param _sender Address to check for authorization",
            "id": 321,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isAuthorized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "517:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:17:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "554:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:6:2"
            },
            "scope": 327,
            "src": "495:65:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Returns true for contracts that adhere to the ACL interface\n@return Boolean value identifying contract as implementing the ACL interface",
            "id": 326,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isACL",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "762:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "761:6:2"
            },
            "scope": 327,
            "src": "725:43:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 328,
        "src": "97:674:2"
      }
    ],
    "src": "0:771:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-08-26T21:33:32.783Z"
}