{
  "contractName": "MockProductStore",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint128"
        }
      ],
      "name": "getImageURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "id",
              "type": "uint128"
            },
            {
              "name": "createdAt",
              "type": "uint64"
            },
            {
              "name": "updatedAt",
              "type": "uint64"
            },
            {
              "name": "createdBy",
              "type": "address"
            },
            {
              "name": "updatedBy",
              "type": "address"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            },
            {
              "name": "imageURI",
              "type": "string"
            },
            {
              "name": "price",
              "type": "uint128"
            },
            {
              "name": "inventory",
              "type": "uint128"
            }
          ],
          "name": "_product",
          "type": "tuple"
        }
      ],
      "name": "abiEncode",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint128"
        }
      ],
      "name": "getName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "__name",
          "type": "string"
        },
        {
          "name": "__description",
          "type": "string"
        },
        {
          "name": "__imageURI",
          "type": "string"
        },
        {
          "name": "__price",
          "type": "uint128"
        },
        {
          "name": "__inventory",
          "type": "uint128"
        }
      ],
      "name": "addProduct",
      "outputs": [
        {
          "name": "",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint128"
        }
      ],
      "name": "getUpdatedAt",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint128"
        }
      ],
      "name": "getInventory",
      "outputs": [
        {
          "name": "",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint128"
        }
      ],
      "name": "getCreatedBy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "logoURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "id",
              "type": "uint128"
            },
            {
              "name": "createdAt",
              "type": "uint64"
            },
            {
              "name": "updatedAt",
              "type": "uint64"
            },
            {
              "name": "createdBy",
              "type": "address"
            },
            {
              "name": "updatedBy",
              "type": "address"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            },
            {
              "name": "imageURI",
              "type": "string"
            },
            {
              "name": "price",
              "type": "uint128"
            },
            {
              "name": "inventory",
              "type": "uint128"
            }
          ],
          "name": "_product",
          "type": "tuple"
        }
      ],
      "name": "isValid",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint128"
        }
      ],
      "name": "getCreatedAt",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isEternalStorage",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ownableDelegate",
      "outputs": [
        {
          "name": "_ownableDelegate",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "__logoURI",
          "type": "string"
        }
      ],
      "name": "setLogoURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "__name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint128"
        }
      ],
      "name": "getUpdatedBy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isProductStore",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint128"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "productCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint128"
        }
      ],
      "name": "getDescription",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ownableDelegate",
          "type": "address"
        }
      ],
      "name": "setOwnableDelegate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "DepositedFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_id",
          "type": "uint128"
        },
        {
          "indexed": true,
          "name": "_updatedAt",
          "type": "uint64"
        },
        {
          "indexed": true,
          "name": "_updatedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_modelVersion",
          "type": "uint16"
        },
        {
          "indexed": false,
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "ArticleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_oldName",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "NameUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_oldLogoURI",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_newLogoURI",
          "type": "string"
        }
      ],
      "name": "LogoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_payee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.23;\n\nimport \"../store/ProductStoreV1.sol\";\n\n/**\n* @title MockProductStore\n* @dev Mock contract used for ProductStoreV1 tests\n*/\ncontract MockProductStore is ProductStoreV1 {\n\n  /**\n  * @dev DepositedFunds is emited every time a deposit is made\n  * @param _sender Address of sender that performed the deposit\n  * @param _amount Amount deposited\n  */\n  event DepositedFunds(address _sender, uint256 _amount);\n\n  /**\n  * @dev Accepts a value deposit and emits an event\n  */\n  function deposit() public payable {\n    emit DepositedFunds(msg.sender, msg.value);\n  }\n\n}",
  "sourcePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/mocks/MockProductStoreV1.sol",
  "ast": {
    "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/mocks/MockProductStoreV1.sol",
    "exportedSymbols": {
      "MockProductStore": [
        375
      ]
    },
    "id": 376,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 354,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/store/ProductStoreV1.sol",
        "file": "../store/ProductStoreV1.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 376,
        "sourceUnit": 1801,
        "src": "26:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 356,
              "name": "ProductStoreV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1800,
              "src": "178:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProductStoreV1_$1800",
                "typeString": "contract ProductStoreV1"
              }
            },
            "id": 357,
            "nodeType": "InheritanceSpecifier",
            "src": "178:14:6"
          }
        ],
        "contractDependencies": [
          685,
          919,
          1179,
          1187,
          1230,
          1800
        ],
        "contractKind": "contract",
        "documentation": "@title MockProductStore\n@dev Mock contract used for ProductStoreV1 tests",
        "fullyImplemented": false,
        "id": 375,
        "linearizedBaseContracts": [
          375,
          1800,
          685,
          1230,
          1179,
          1187,
          919
        ],
        "name": "MockProductStore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev DepositedFunds is emited every time a deposit is made\n@param _sender Address of sender that performed the deposit\n@param _amount Amount deposited",
            "id": 363,
            "name": "DepositedFunds",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "indexed": false,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "393:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "410:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:34:6"
            },
            "src": "372:55:6"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "528:53:6",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 367,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1815,
                          "src": "554:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "554:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1815,
                          "src": "566:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "566:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 366,
                      "name": "DepositedFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 363,
                      "src": "539:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "EmitStatement",
                  "src": "534:42:6"
                }
              ]
            },
            "documentation": "@dev Accepts a value deposit and emits an event",
            "id": 374,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:2:6"
            },
            "payable": true,
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:6"
            },
            "scope": 375,
            "src": "494:87:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 376,
        "src": "149:435:6"
      }
    ],
    "src": "0:584:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/mocks/MockProductStoreV1.sol",
    "exportedSymbols": {
      "MockProductStore": [
        375
      ]
    },
    "id": 376,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 354,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/store/ProductStoreV1.sol",
        "file": "../store/ProductStoreV1.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 376,
        "sourceUnit": 1801,
        "src": "26:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 356,
              "name": "ProductStoreV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1800,
              "src": "178:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProductStoreV1_$1800",
                "typeString": "contract ProductStoreV1"
              }
            },
            "id": 357,
            "nodeType": "InheritanceSpecifier",
            "src": "178:14:6"
          }
        ],
        "contractDependencies": [
          685,
          919,
          1179,
          1187,
          1230,
          1800
        ],
        "contractKind": "contract",
        "documentation": "@title MockProductStore\n@dev Mock contract used for ProductStoreV1 tests",
        "fullyImplemented": false,
        "id": 375,
        "linearizedBaseContracts": [
          375,
          1800,
          685,
          1230,
          1179,
          1187,
          919
        ],
        "name": "MockProductStore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev DepositedFunds is emited every time a deposit is made\n@param _sender Address of sender that performed the deposit\n@param _amount Amount deposited",
            "id": 363,
            "name": "DepositedFunds",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "indexed": false,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "393:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "410:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:34:6"
            },
            "src": "372:55:6"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "528:53:6",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 367,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1815,
                          "src": "554:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "554:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1815,
                          "src": "566:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "566:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 366,
                      "name": "DepositedFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 363,
                      "src": "539:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "EmitStatement",
                  "src": "534:42:6"
                }
              ]
            },
            "documentation": "@dev Accepts a value deposit and emits an event",
            "id": 374,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:2:6"
            },
            "payable": true,
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:6"
            },
            "scope": 375,
            "src": "494:87:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 376,
        "src": "149:435:6"
      }
    ],
    "src": "0:584:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-27T20:47:48.747Z"
}