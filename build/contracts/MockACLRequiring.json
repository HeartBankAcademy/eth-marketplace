{
  "contractName": "MockACLRequiring",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "updateACL",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "acl",
      "outputs": [
        {
          "name": "_acl",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_aclAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "ACLUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "onlyForProductOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "onlyForAuthorizedAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610ac1833981018060405281019080805190602001909291905050508061004c816100ae640100000000026401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fd9c4a08818b5e0b58c0856ec8285d83c51f0654438a200ef0f9e0e968f583ca960405160405180910390a350506102f1565b60006100cc826102de64010000000002610782176401000000009004565b1515610166576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4e65772041434c2061646472657373206973206e6f74206120636f6e7472616381526020017f740000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a8218cd36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156101ca57600080fd5b505af11580156101de573d6000803e3d6000fd5b505050506040513d60208110156101f457600080fd5b8101908080519060200190929190505050151561029f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f4e65772041434c206164647265737320646f6573206e6f7420636f6e666f726d81526020017f20746f204941434c20696e74657266616365000000000000000000000000000081525060400191505060405180910390fd5b60405180807f636f6d2e6d61726b6574706c6163652e61636c726571756972696e672e61636c8152506020019050604051809103902090508181555050565b600080823b905060008111915050919050565b6107c1806103006000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632a33d4721461006757806387a7066b14610096578063d76ecf69146100d9578063de28735914610108575b600080fd5b34801561007357600080fd5b5061007c61015f565b604051808215151515815260200191505060405180910390f35b3480156100a257600080fd5b506100d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610255565b005b3480156100e557600080fd5b506100ee61042c565b604051808215151515815260200191505060405180910390f35b34801561011457600080fd5b5061011d610522565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008061016a610522565b90508073ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561020757600080fd5b505af115801561021b573d6000803e3d6000fd5b505050506040513d602081101561023157600080fd5b8101908080519060200190929190505050151561024d57600080fd5b600191505090565b600080610260610522565b90508073ffffffffffffffffffffffffffffffffffffffff1663bb6a4520336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156102fd57600080fd5b505af1158015610311573d6000803e3d6000fd5b505050506040513d602081101561032757600080fd5b8101908080519060200190929190505050151561034357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561037f57600080fd5b610387610522565b91508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156103c457600080fd5b6103cd83610565565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fd9c4a08818b5e0b58c0856ec8285d83c51f0654438a200ef0f9e0e968f583ca960405160405180910390a3505050565b600080610437610522565b90508073ffffffffffffffffffffffffffffffffffffffff1663bb6a4520336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156104d457600080fd5b505af11580156104e8573d6000803e3d6000fd5b505050506040513d60208110156104fe57600080fd5b8101908080519060200190929190505050151561051a57600080fd5b600191505090565b60008060405180807f636f6d2e6d61726b6574706c6163652e61636c726571756972696e672e61636c815250602001905060405180910390209050805491505090565b600061057082610782565b151561060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4e65772041434c2061646472657373206973206e6f74206120636f6e7472616381526020017f740000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a8218cd36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561066e57600080fd5b505af1158015610682573d6000803e3d6000fd5b505050506040513d602081101561069857600080fd5b81019080805190602001909291905050501515610743576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f4e65772041434c206164647265737320646f6573206e6f7420636f6e666f726d81526020017f20746f204941434c20696e74657266616365000000000000000000000000000081525060400191505060405180910390fd5b60405180807f636f6d2e6d61726b6574706c6163652e61636c726571756972696e672e61636c8152506020019050604051809103902090508181555050565b600080823b9050600081119150509190505600a165627a7a723058204fca7cffaf3ee9145ae80a0a537dd3ec1bc357ed2e7495747cec8ef278c178e50029",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632a33d4721461006757806387a7066b14610096578063d76ecf69146100d9578063de28735914610108575b600080fd5b34801561007357600080fd5b5061007c61015f565b604051808215151515815260200191505060405180910390f35b3480156100a257600080fd5b506100d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610255565b005b3480156100e557600080fd5b506100ee61042c565b604051808215151515815260200191505060405180910390f35b34801561011457600080fd5b5061011d610522565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008061016a610522565b90508073ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561020757600080fd5b505af115801561021b573d6000803e3d6000fd5b505050506040513d602081101561023157600080fd5b8101908080519060200190929190505050151561024d57600080fd5b600191505090565b600080610260610522565b90508073ffffffffffffffffffffffffffffffffffffffff1663bb6a4520336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156102fd57600080fd5b505af1158015610311573d6000803e3d6000fd5b505050506040513d602081101561032757600080fd5b8101908080519060200190929190505050151561034357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561037f57600080fd5b610387610522565b91508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156103c457600080fd5b6103cd83610565565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fd9c4a08818b5e0b58c0856ec8285d83c51f0654438a200ef0f9e0e968f583ca960405160405180910390a3505050565b600080610437610522565b90508073ffffffffffffffffffffffffffffffffffffffff1663bb6a4520336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156104d457600080fd5b505af11580156104e8573d6000803e3d6000fd5b505050506040513d60208110156104fe57600080fd5b8101908080519060200190929190505050151561051a57600080fd5b600191505090565b60008060405180807f636f6d2e6d61726b6574706c6163652e61636c726571756972696e672e61636c815250602001905060405180910390209050805491505090565b600061057082610782565b151561060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4e65772041434c2061646472657373206973206e6f74206120636f6e7472616381526020017f740000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a8218cd36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561066e57600080fd5b505af1158015610682573d6000803e3d6000fd5b505050506040513d602081101561069857600080fd5b81019080805190602001909291905050501515610743576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f4e65772041434c206164647265737320646f6573206e6f7420636f6e666f726d81526020017f20746f204941434c20696e74657266616365000000000000000000000000000081525060400191505060405180910390fd5b60405180807f636f6d2e6d61726b6574706c6163652e61636c726571756972696e672e61636c8152506020019050604051809103902090508181555050565b600080823b9050600081119150509190505600a165627a7a723058204fca7cffaf3ee9145ae80a0a537dd3ec1bc357ed2e7495747cec8ef278c178e50029",
  "sourceMap": "143:723:73:-;;;293:69;8:9:-1;5:2;;;30:1;27;20:12;5:2;293:69:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:11;1035:19:1;1042:11;1035:6;;;:19;;;:::i;:::-;1088:11;1065:35;;1084:1;1065:35;;;;;;;;;;;;989:116;293:69:73;143:723;;1954:315:1;2176:16;2009:32;2033:7;2009:23;;;;;:32;;;:::i;:::-;2001:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2098:7;2093:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2093:21:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2093:21:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2093:21:1;;;;;;;;;;;;;;;;2085:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:45;;;;;;;;;;;;;;;;;;;2176:35;;2251:7;2241:8;2234:25;2226:39;;:::o;438:578:4:-;496:4;508:12;983:5;971:18;963:26;;1010:1;1003:4;:8;996:15;;438:578;;;;:::o;143:723:73:-;;;;;;;",
  "deployedSourceMap": "143:723:73:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;764:99:73;;;;;;;;;;;;;;;;;;;;;;;;;;;2391:252:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2391:252:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:96:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;511:96:73;;;;;;;;;;;;;;;;;;;;;;;;;;;1578:147:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1578:147:1;;;;;;;;;;;;;;;;;;;;;;;;;;;764:99:73;835:4;1392:9:1;1409:5;:3;:5::i;:::-;1392:23;;1429:4;:17;;;1447:10;1429:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1429:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1429:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1429:29:1;;;;;;;;;;;;;;;;1421:38;;;;;;;;854:4:73;847:11;;764:99;;:::o;2391:252:1:-;2501:18;1206:9;1223:5;:3;:5::i;:::-;1206:23;;1243:4;:19;;;1263:10;1243:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1243:31:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1243:31:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1243:31:1;;;;;;;;;;;;;;;;1235:40;;;;;;;;2492:1;2469:25;;:11;:25;;;;2461:34;;;;;;;;2522:5;:3;:5::i;:::-;2501:26;;2556:10;2541:25;;:11;:25;;;;2533:34;;;;;;;;2573:19;2580:11;2573:6;:19::i;:::-;2626:11;2603:35;;2614:10;2603:35;;;;;;;;;;;;2391:252;;;:::o;511:96:73:-;579:4;1206:9:1;1223:5;:3;:5::i;:::-;1206:23;;1243:4;:19;;;1263:10;1243:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1243:31:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1243:31:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1243:31:1;;;;;;;;;;;;;;;;1235:40;;;;;;;;598:4:73;591:11;;511:96;;:::o;1578:147:1:-;1614:12;1634:16;851:45;;;;;;;;;;;;;;;;;;;1634:35;;1706:8;1700:15;1692:23;;1684:37;;:::o;1954:315::-;2176:16;2009:32;2033:7;2009:23;:32::i;:::-;2001:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2098:7;2093:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2093:21:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2093:21:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2093:21:1;;;;;;;;;;;;;;;;2085:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:45;;;;;;;;;;;;;;;;;;;2176:35;;2251:7;2241:8;2234:25;2226:39;;:::o;438:578:4:-;496:4;508:12;983:5;971:18;963:26;;1010:1;1003:4;:8;996:15;;438:578;;;;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport \"../acl/ACLRequiring.sol\";\n\n/**\n* @title MockACLRequiring\n* @dev Mock contract used for ACLRequiring tests\n*/\ncontract MockACLRequiring is ACLRequiring {\n\n  /**\n  * @dev Constructor function\n  * @param _aclAddress Address of the ACL contract to be used\n  */\n  constructor(address _aclAddress) ACLRequiring(_aclAddress) public { }\n\n  /**\n  * @dev Returns true if the sender is the product owner, otherwise it throws\n  * @return Returns true if sender is the product owner\n  */\n  function onlyForProductOwner() onlyProductOwner public view returns(bool) {\n    return true;\n  }\n\n  /**\n  * @dev Returns true if the sender is an authorized account, otherwise it throws\n  * @return Returns true if sender is an authorized account\n  */\n  function onlyForAuthorizedAddress() onlyAuthorized public view returns(bool) {\n    return true;\n  }\n\n}",
  "sourcePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/mocks/MockACLRequiring.sol",
  "ast": {
    "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/mocks/MockACLRequiring.sol",
    "exportedSymbols": {
      "MockACLRequiring": [
        6505
      ]
    },
    "id": 6506,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6472,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:73"
      },
      {
        "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/acl/ACLRequiring.sol",
        "file": "../acl/ACLRequiring.sol",
        "id": 6473,
        "nodeType": "ImportDirective",
        "scope": 6506,
        "sourceUnit": 203,
        "src": "26:33:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6474,
              "name": "ACLRequiring",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 202,
              "src": "172:12:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ACLRequiring_$202",
                "typeString": "contract ACLRequiring"
              }
            },
            "id": 6475,
            "nodeType": "InheritanceSpecifier",
            "src": "172:12:73"
          }
        ],
        "contractDependencies": [
          202
        ],
        "contractKind": "contract",
        "documentation": "@title MockACLRequiring\n@dev Mock contract used for ACLRequiring tests",
        "fullyImplemented": true,
        "id": 6505,
        "linearizedBaseContracts": [
          6505,
          202
        ],
        "name": "MockACLRequiring",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6483,
              "nodeType": "Block",
              "src": "359:3:73",
              "statements": []
            },
            "documentation": "@dev Constructor function\n@param _aclAddress Address of the ACL contract to be used",
            "id": 6484,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6480,
                    "name": "_aclAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6477,
                    "src": "339:11:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6479,
                  "name": "ACLRequiring",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 202,
                  "src": "326:12:73",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ACLRequiring_$202_$",
                    "typeString": "type(contract ACLRequiring)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "326:25:73"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6477,
                  "name": "_aclAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6484,
                  "src": "305:19:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "304:21:73"
            },
            "payable": false,
            "returnParameters": {
              "id": 6482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "359:0:73"
            },
            "scope": 6505,
            "src": "293:69:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6493,
              "nodeType": "Block",
              "src": "585:22:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "598:4:73",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6490,
                  "id": 6492,
                  "nodeType": "Return",
                  "src": "591:11:73"
                }
              ]
            },
            "documentation": "@dev Returns true if the sender is the product owner, otherwise it throws\n@return Returns true if sender is the product owner",
            "id": 6494,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 6487,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6486,
                  "name": "onlyProductOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "542:16:73",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "542:16:73"
              }
            ],
            "name": "onlyForProductOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:2:73"
            },
            "payable": false,
            "returnParameters": {
              "id": 6490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6489,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6494,
                  "src": "579:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6488,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "578:6:73"
            },
            "scope": 6505,
            "src": "511:96:73",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6503,
              "nodeType": "Block",
              "src": "841:22:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "854:4:73",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6500,
                  "id": 6502,
                  "nodeType": "Return",
                  "src": "847:11:73"
                }
              ]
            },
            "documentation": "@dev Returns true if the sender is an authorized account, otherwise it throws\n@return Returns true if sender is an authorized account",
            "id": 6504,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 6497,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6496,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 126,
                  "src": "800:14:73",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "800:14:73"
              }
            ],
            "name": "onlyForAuthorizedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:2:73"
            },
            "payable": false,
            "returnParameters": {
              "id": 6500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6499,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6504,
                  "src": "835:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6498,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "834:6:73"
            },
            "scope": 6505,
            "src": "764:99:73",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6506,
        "src": "143:723:73"
      }
    ],
    "src": "0:866:73"
  },
  "legacyAST": {
    "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/mocks/MockACLRequiring.sol",
    "exportedSymbols": {
      "MockACLRequiring": [
        6505
      ]
    },
    "id": 6506,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6472,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:73"
      },
      {
        "absolutePath": "/Users/matias/Projects/consensys/eth-marketplace/contracts/acl/ACLRequiring.sol",
        "file": "../acl/ACLRequiring.sol",
        "id": 6473,
        "nodeType": "ImportDirective",
        "scope": 6506,
        "sourceUnit": 203,
        "src": "26:33:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6474,
              "name": "ACLRequiring",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 202,
              "src": "172:12:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ACLRequiring_$202",
                "typeString": "contract ACLRequiring"
              }
            },
            "id": 6475,
            "nodeType": "InheritanceSpecifier",
            "src": "172:12:73"
          }
        ],
        "contractDependencies": [
          202
        ],
        "contractKind": "contract",
        "documentation": "@title MockACLRequiring\n@dev Mock contract used for ACLRequiring tests",
        "fullyImplemented": true,
        "id": 6505,
        "linearizedBaseContracts": [
          6505,
          202
        ],
        "name": "MockACLRequiring",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6483,
              "nodeType": "Block",
              "src": "359:3:73",
              "statements": []
            },
            "documentation": "@dev Constructor function\n@param _aclAddress Address of the ACL contract to be used",
            "id": 6484,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6480,
                    "name": "_aclAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6477,
                    "src": "339:11:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6479,
                  "name": "ACLRequiring",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 202,
                  "src": "326:12:73",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ACLRequiring_$202_$",
                    "typeString": "type(contract ACLRequiring)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "326:25:73"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6477,
                  "name": "_aclAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6484,
                  "src": "305:19:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "304:21:73"
            },
            "payable": false,
            "returnParameters": {
              "id": 6482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "359:0:73"
            },
            "scope": 6505,
            "src": "293:69:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6493,
              "nodeType": "Block",
              "src": "585:22:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "598:4:73",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6490,
                  "id": 6492,
                  "nodeType": "Return",
                  "src": "591:11:73"
                }
              ]
            },
            "documentation": "@dev Returns true if the sender is the product owner, otherwise it throws\n@return Returns true if sender is the product owner",
            "id": 6494,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 6487,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6486,
                  "name": "onlyProductOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "542:16:73",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "542:16:73"
              }
            ],
            "name": "onlyForProductOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:2:73"
            },
            "payable": false,
            "returnParameters": {
              "id": 6490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6489,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6494,
                  "src": "579:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6488,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "578:6:73"
            },
            "scope": 6505,
            "src": "511:96:73",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6503,
              "nodeType": "Block",
              "src": "841:22:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "854:4:73",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6500,
                  "id": 6502,
                  "nodeType": "Return",
                  "src": "847:11:73"
                }
              ]
            },
            "documentation": "@dev Returns true if the sender is an authorized account, otherwise it throws\n@return Returns true if sender is an authorized account",
            "id": 6504,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 6497,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6496,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 126,
                  "src": "800:14:73",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "800:14:73"
              }
            ],
            "name": "onlyForAuthorizedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:2:73"
            },
            "payable": false,
            "returnParameters": {
              "id": 6500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6499,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6504,
                  "src": "835:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6498,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "834:6:73"
            },
            "scope": 6505,
            "src": "764:99:73",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6506,
        "src": "143:723:73"
      }
    ],
    "src": "0:866:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-27T17:14:41.785Z"
}